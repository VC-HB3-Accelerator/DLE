#!/bin/bash

/**
 * Copyright (c) 2024-2025 –¢–∞—Ä–∞–±–∞–Ω–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á
 * All rights reserved.
 * 
 * This software is proprietary and confidential.
 * Unauthorized copying, modification, or distribution is prohibited.
 * 
 * For licensing inquiries: info@hb3-accelerator.com
 * Website: https://hb3-accelerator.com
 * GitHub: https://github.com/VC-HB3-Accelerator
 */

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —Å–µ—Ä–≤–µ—Ä–∞–º–∏
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./migrate-encrypted-data.sh

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SOURCE_HOST="localhost"  # –ò—Å—Ö–æ–¥–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
TARGET_HOST="new-server.com"  # –¶–µ–ª–µ–≤–æ–π —Å–µ—Ä–≤–µ—Ä
DB_NAME="dapp_db"
DB_USER="dapp_user"
DB_PASSWORD="dapp_password"
BACKUP_DIR="./migration_backups"

# –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –¥–ª—è –±—ç–∫–∞–ø–æ–≤
mkdir -p "$BACKUP_DIR"

echo "üîÑ –ü–µ—Ä–µ–Ω–æ—Å –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —Å–µ—Ä–≤–µ—Ä–∞–º–∏..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–∞ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
if [ ! -f "./ssl/keys/full_db_encryption.key" ]; then
    echo "‚ùå –ö–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω: ./ssl/keys/full_db_encryption.key"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞ —Å –∫–ª—é—á–æ–º
create_backup_with_key() {
    echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Å –∫–ª—é—á–æ–º —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è..."
    
    # –°–æ–∑–¥–∞—ë–º –±—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    BACKUP_FILE="$BACKUP_DIR/encrypted_backup_$(date +%Y%m%d_%H%M%S).sql"
    docker exec dapp-postgres pg_dump -U "$DB_USER" "$DB_NAME" > "$BACKUP_FILE"
    
    # –°–æ–∑–¥–∞—ë–º –∞—Ä—Ö–∏–≤ —Å –±—ç–∫–∞–ø–æ–º –∏ –∫–ª—é—á–æ–º
    ARCHIVE_FILE="$BACKUP_DIR/migration_package_$(date +%Y%m%d_%H%M%S).tar.gz"
    tar -czf "$ARCHIVE_FILE" \
        -C . "$BACKUP_FILE" \
        -C . ssl/keys/full_db_encryption.key \
        -C . encrypt-all-tables.sh \
        -C . decrypt-all-tables.sh \
        -C . backend/services/encryptedDataService.js
    
    echo "‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: $ARCHIVE_FILE"
    echo "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∞—Ä—Ö–∏–≤–∞:"
    tar -tzf "$ARCHIVE_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞ —Ü–µ–ª–µ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ
restore_on_target() {
    echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ —Ü–µ–ª–µ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ..."
    
    # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∞—Ä—Ö–∏–≤
    tar -xzf "$ARCHIVE_FILE" -C .
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
    mkdir -p ./ssl/keys
    cp ssl/keys/full_db_encryption.key ./ssl/keys/
    chmod 600 ./ssl/keys/full_db_encryption.key
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    docker exec dapp-postgres psql -U "$DB_USER" "$DB_NAME" < "$BACKUP_FILE"
    
    echo "‚úÖ –î–∞–Ω–Ω—ã–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ —Ü–µ–ª–µ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ —á–µ—Ä–µ–∑ SSH
migrate_via_ssh() {
    echo "üåê –ü–µ—Ä–µ–Ω–æ—Å —á–µ—Ä–µ–∑ SSH..."
    
    # –°–æ–∑–¥–∞—ë–º –±—ç–∫–∞–ø
    create_backup_with_key
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—Ä—Ö–∏–≤ –Ω–∞ —Ü–µ–ª–µ–≤–æ–π —Å–µ—Ä–≤–µ—Ä
    scp "$ARCHIVE_FILE" user@$TARGET_HOST:/tmp/
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ —Ü–µ–ª–µ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ
    ssh user@$TARGET_HOST << 'EOF'
        cd /tmp
        tar -xzf migration_package_*.tar.gz -C /path/to/app/
        cd /path/to/app/
        chmod 600 ssl/keys/full_db_encryption.key
        docker exec dapp-postgres psql -U dapp_user dapp_db < encrypted_backup_*.sql
        echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
EOF
    
    echo "‚úÖ –ü–µ—Ä–µ–Ω–æ—Å —á–µ—Ä–µ–∑ SSH –∑–∞–≤–µ—Ä—à—ë–Ω"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ —á–µ—Ä–µ–∑ S3/–æ–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
migrate_via_cloud() {
    echo "‚òÅÔ∏è –ü–µ—Ä–µ–Ω–æ—Å —á–µ—Ä–µ–∑ –æ–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ..."
    
    # –°–æ–∑–¥–∞—ë–º –±—ç–∫–∞–ø
    create_backup_with_key
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ S3 (–ø—Ä–∏–º–µ—Ä)
    aws s3 cp "$ARCHIVE_FILE" s3://your-bucket/migrations/
    
    echo "üì§ –ê—Ä—Ö–∏–≤ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ –æ–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ"
    echo "üì• –î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∫–∞—á–∞–π—Ç–µ –∞—Ä—Ö–∏–≤ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "   tar -xzf migration_package_*.tar.gz"
    echo "   docker exec dapp-postgres psql -U dapp_user dapp_db < encrypted_backup_*.sql"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ —á–µ—Ä–µ–∑ USB/–ª–æ–∫–∞–ª—å–Ω—ã–π –Ω–æ—Å–∏—Ç–µ–ª—å
migrate_via_local() {
    echo "üíæ –ü–µ—Ä–µ–Ω–æ—Å —á–µ—Ä–µ–∑ –ª–æ–∫–∞–ª—å–Ω—ã–π –Ω–æ—Å–∏—Ç–µ–ª—å..."
    
    # –°–æ–∑–¥–∞—ë–º –±—ç–∫–∞–ø
    create_backup_with_key
    
    echo "üìÅ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: $ARCHIVE_FILE"
    echo "üíø –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª –Ω–∞ USB-–Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å –∏–ª–∏ –¥—Ä—É–≥–æ–π –Ω–æ—Å–∏—Ç–µ–ª—å"
    echo "üîÑ –ù–∞ —Ü–µ–ª–µ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "   tar -xzf migration_package_*.tar.gz"
    echo "   docker exec dapp-postgres psql -U dapp_user dapp_db < encrypted_backup_*.sql"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏
verify_migration() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –º–∏–≥—Ä–∞—Ü–∏–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–∞
    if [ ! -f "./ssl/keys/full_db_encryption.key" ]; then
        echo "‚ùå –ö–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    if ! docker exec dapp-postgres pg_isready -U "$DB_USER" -d "$DB_NAME" > /dev/null 2>&1; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    docker exec dapp-postgres psql -U "$DB_USER" -d "$DB_NAME" -c "
    SELECT 
        table_name,
        COUNT(*) as encrypted_columns
    FROM information_schema.columns 
    WHERE table_schema = 'public'
    AND column_name LIKE '%_encrypted'
    GROUP BY table_name
    ORDER BY table_name;"
    
    echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
echo "üéØ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–µ—Ä–µ–Ω–æ—Å–∞:"
echo "1) –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø —Å –∫–ª—é—á–æ–º"
echo "2) –ü–µ—Ä–µ–Ω–æ—Å —á–µ—Ä–µ–∑ SSH"
echo "3) –ü–µ—Ä–µ–Ω–æ—Å —á–µ—Ä–µ–∑ –æ–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ"
echo "4) –ü–µ—Ä–µ–Ω–æ—Å —á–µ—Ä–µ–∑ –ª–æ–∫–∞–ª—å–Ω—ã–π –Ω–æ—Å–∏—Ç–µ–ª—å"
echo "5) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å"
echo "6) –í—ã—Ö–æ–¥"

read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-6): " choice

case $choice in
    1)
        create_backup_with_key
        ;;
    2)
        read -p "–í–≤–µ–¥–∏—Ç–µ IP —Ü–µ–ª–µ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞: " TARGET_HOST
        migrate_via_ssh
        ;;
    3)
        migrate_via_cloud
        ;;
    4)
        migrate_via_local
        ;;
    5)
        verify_migration
        ;;
    6)
        echo "üëã –í—ã—Ö–æ–¥"
        exit 0
        ;;
    *)
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
        exit 1
        ;;
esac

echo ""
echo "üéØ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –Ω–∞ —Ü–µ–ª–µ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ:"
echo "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∞—Ä—Ö–∏–≤ –Ω–∞ —Ü–µ–ª–µ–≤–æ–π —Å–µ—Ä–≤–µ—Ä"
echo "2. –†–∞—Å–ø–∞–∫—É–π—Ç–µ –∞—Ä—Ö–∏–≤: tar -xzf migration_package_*.tar.gz"
echo "3. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–ª—é—á: chmod 600 ssl/keys/full_db_encryption.key"
echo "4. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ë–î: docker exec dapp-postgres psql -U dapp_user dapp_db < encrypted_backup_*.sql"
echo "5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å: ./verify-migration.sh" 