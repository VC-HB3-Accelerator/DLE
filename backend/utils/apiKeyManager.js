/**
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä API –∫–ª—é—á–µ–π
 * –£–Ω–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å API –∫–ª—é—á–∞–º–∏ Etherscan
 * Copyright (c) 2024-2025 –¢–∞—Ä–∞–±–∞–Ω–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á
 */

const logger = require('./logger');

class ApiKeyManager {
  /**
   * –ü–æ–ª—É—á–∞–µ—Ç API –∫–ª—é—á Etherscan –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
   * @param {Object} params - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–µ–ø–ª–æ—è
   * @param {Object} reqBody - –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
   * @returns {string|null} - API –∫–ª—é—á –∏–ª–∏ null
   */
  static getEtherscanApiKey(params = {}, reqBody = {}) {
    // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:
    // 1. –ò–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–µ–ø–ª–æ—è (–ë–î)
    // 2. –ò–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ (—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥)
    // 3. –ò–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    // 4. –ò–∑ —Å–µ–∫—Ä–µ—Ç–æ–≤
    
    let apiKey = null;
    
    // 1. –ò–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–µ–ø–ª–æ—è (–ë–î) - –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1
    if (params.etherscan_api_key) {
      apiKey = params.etherscan_api_key;
      logger.info('[API_KEY] ‚úÖ –ö–ª—é—á –ø–æ–ª—É—á–µ–Ω –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–µ–ø–ª–æ—è (–ë–î)');
    }
    
    // 2. –ò–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ (—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥) - –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2
    else if (reqBody.etherscanApiKey) {
      apiKey = reqBody.etherscanApiKey;
      logger.info('[API_KEY] ‚úÖ –ö–ª—é—á –ø–æ–ª—É—á–µ–Ω –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ (—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥)');
    }
    
    // 3. –ò–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è - –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 3
    else if (process.env.ETHERSCAN_API_KEY) {
      apiKey = process.env.ETHERSCAN_API_KEY;
      logger.info('[API_KEY] ‚úÖ –ö–ª—é—á –ø–æ–ª—É—á–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    }
    
    // 4. –ò–∑ —Å–µ–∫—Ä–µ—Ç–æ–≤ - –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 4
    else if (process.env.ETHERSCAN_V2_API_KEY) {
      apiKey = process.env.ETHERSCAN_V2_API_KEY;
      logger.info('[API_KEY] ‚úÖ –ö–ª—é—á –ø–æ–ª—É—á–µ–Ω –∏–∑ —Å–µ–∫—Ä–µ—Ç–æ–≤');
    }
    
    if (apiKey) {
      logger.info(`[API_KEY] üîë API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω: ${apiKey.substring(0, 8)}...`);
      return apiKey;
    } else {
      logger.warn('[API_KEY] ‚ö†Ô∏è API –∫–ª—é—á Etherscan –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return null;
    }
  }
  
  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç API –∫–ª—é—á –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
   * @param {string} apiKey - API –∫–ª—é—á
   */
  static setEtherscanApiKey(apiKey) {
    if (apiKey) {
      process.env.ETHERSCAN_API_KEY = apiKey;
      logger.info(`[API_KEY] üîß API –∫–ª—é—á —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: ${apiKey.substring(0, 8)}...`);
    }
  }
  
  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
   * @param {string} apiKey - API –∫–ª—é—á –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @returns {boolean} - true –µ—Å–ª–∏ –∫–ª—é—á –≤–∞–ª–∏–¥–Ω—ã–π
   */
  static validateApiKey(apiKey) {
    if (!apiKey || typeof apiKey !== 'string') {
      logger.warn('[API_KEY] ‚ùå API –∫–ª—é—á –Ω–µ –≤–∞–ª–∏–¥–Ω—ã–π: –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ —Å—Ç—Ä–æ–∫–∞');
      return false;
    }
    
    if (apiKey.length < 10) {
      logger.warn('[API_KEY] ‚ùå API –∫–ª—é—á —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π');
      return false;
    }
    
    logger.info('[API_KEY] ‚úÖ API –∫–ª—é—á –≤–∞–ª–∏–¥–Ω—ã–π');
    return true;
  }
  
  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç API –∫–ª—é—á (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥)
   * @param {Object} params - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–µ–ø–ª–æ—è
   * @param {Object} reqBody - –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
   * @returns {string|null} - API –∫–ª—é—á –∏–ª–∏ null
   */
  static getAndSetEtherscanApiKey(params = {}, reqBody = {}) {
    const apiKey = this.getEtherscanApiKey(params, reqBody);
    
    if (apiKey && this.validateApiKey(apiKey)) {
      this.setEtherscanApiKey(apiKey);
      return apiKey;
    }
    
    return null;
  }
}

module.exports = ApiKeyManager;
