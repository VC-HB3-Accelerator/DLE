/**
 * Copyright (c) 2024-2025 –¢–∞—Ä–∞–±–∞–Ω–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á
 * All rights reserved.
 * 
 * This software is proprietary and confidential.
 * Unauthorized copying, modification, or distribution is prohibited.
 * 
 * For licensing inquiries: info@hb3-accelerator.com
 * Website: https://hb3-accelerator.com
 * GitHub: https://github.com/HB3-ACCELERATOR
 */

// –°–∫—Ä–∏–ø—Ç –¥–ª—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö DLE –∏–∑ –±–ª–æ–∫—á–µ–π–Ω–∞
const { ethers } = require("hardhat");

async function main() {
  // –ê–¥—Ä–µ—Å DLE –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –∞–¥—Ä–µ—Å)
  const dleAddress = process.env.DLE_ADDRESS || "0x219f9665e713476B0B080bd73b8465B39dAB1E41";
  
  console.log(`–ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ DLE –∏–∑ –±–ª–æ–∫—á–µ–π–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: ${dleAddress}`);
  
  // –ü–æ–ª—É—á–∞–µ–º RPC URL –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –¥–ª—è Sepolia
  // –ü–æ–ª—É—á–∞–µ–º RPC URL –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  const rpcService = require('../../services/rpcProviderService');
  const rpcUrl = await rpcService.getRpcUrlByChainId(11155111);
  
  // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä
  const provider = new ethers.JsonRpcProvider(await rpcService.getRpcUrlByChainId(11155111));
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º ABI –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ DLE
    const DLE = await ethers.getContractFactory("DLE");
    const dle = DLE.attach(dleAddress).connect(provider);
    
    // –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ DLE –∏–∑ –±–ª–æ–∫—á–µ–π–Ω–∞
    console.log("\nüìã –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö DLE –∏–∑ –±–ª–æ–∫—á–µ–π–Ω–∞...");
    
    const dleInfo = await dle.getDLEInfo();
    
    console.log("\n‚úÖ –î–∞–Ω–Ω—ã–µ DLE –∏–∑ –±–ª–æ–∫—á–µ–π–Ω–∞:");
    console.log("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");
    console.log(`üè¢ –ù–∞–∑–≤–∞–Ω–∏–µ: ${dleInfo.name}`);
    console.log(`üíé –°–∏–º–≤–æ–ª: ${dleInfo.symbol}`);
    console.log(`üìç –ú–µ—Å—Ç–æ–Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ: ${dleInfo.location}`);
    console.log(`üåç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${dleInfo.coordinates}`);
    console.log(`üèõÔ∏è –Æ—Ä–∏—Å–¥–∏–∫—Ü–∏—è: ${dleInfo.jurisdiction}`);
    console.log(`üìä –û–ö–¢–ú–û: ${dleInfo.oktmo}`);
    console.log(`üè≠ –ö–æ–¥—ã –û–ö–í–≠–î: ${dleInfo.okvedCodes.join(', ')}`);
    console.log(`üè¢ –ö–ü–ü: ${dleInfo.kpp}`);
    console.log(`üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${new Date(Number(dleInfo.creationTimestamp) * 1000).toISOString()}`);
    console.log(`‚úÖ –ê–∫—Ç–∏–≤–µ–Ω: ${dleInfo.isActive}`);
    console.log("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    console.log("\nüìä –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:");
    const quorumPercentage = await dle.quorumPercentage();
    const currentChainId = await dle.getCurrentChainId();
    const totalSupply = await dle.totalSupply();
    
    console.log(`üó≥Ô∏è –ö–≤–æ—Ä—É–º: ${quorumPercentage}%`);
    console.log(`üîó –¢–µ–∫—É—â–∞—è —Å–µ—Ç—å: ${currentChainId}`);
    console.log(`üí∞ –û–±—â–∏–π –∑–∞–ø–∞—Å —Ç–æ–∫–µ–Ω–æ–≤: ${ethers.formatUnits(totalSupply, 18)}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–∫–µ–Ω–∞—Ö
    console.log("\nüë• –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–∫–µ–Ω–∞—Ö:");
    try {
      const totalSupply = await dle.totalSupply();
      console.log(`üí∞ –û–±—â–∏–π –∑–∞–ø–∞—Å: ${ethers.formatUnits(totalSupply, 18)} —Ç–æ–∫–µ–Ω–æ–≤`);
      
      // –ü—Ä–æ–≤–µ—Ä–∏–º –±–∞–ª–∞–Ω—Å —Å–æ–∑–¥–∞—Ç–µ–ª—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ (–∞–¥—Ä–µ—Å, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ø–ª–æ–∏–ª –∫–æ–Ω—Ç—Ä–∞–∫—Ç)
      const deployer = "0xF45aa4917b3775bA37f48Aeb3dc1a943561e9e0B"; // –ê–¥—Ä–µ—Å –∏–∑ –ª–æ–≥–æ–≤
      const deployerBalance = await dle.balanceOf(deployer);
      if (deployerBalance > 0) {
        console.log(`üë§ –°–æ–∑–¥–∞—Ç–µ–ª—å (${deployer}): ${ethers.formatUnits(deployerBalance, 18)} —Ç–æ–∫–µ–Ω–æ–≤`);
      } else {
        console.log(`üë§ –°–æ–∑–¥–∞—Ç–µ–ª—å (${deployer}): 0 —Ç–æ–∫–µ–Ω–æ–≤`);
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –¥—Ä—É–≥–∏–µ –¥–µ—Ä–∂–∞—Ç–µ–ª–∏ —Ç–æ–∫–µ–Ω–æ–≤
      console.log("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤:");
      console.log("üí° –ü–∞—Ä—Ç–Ω–µ—Ä—ã –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –±–ª–æ–∫—á–µ–π–Ω–µ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.");
      console.log("üí° –û–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤.");
      console.log("üí° –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞—Ö —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö JSON.");
      
    } catch (error) {
      console.log("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–∫–µ–Ω–∞—Ö:", error.message);
    }
    
    console.log("\nüåê –°—Å—ã–ª–∫–∞ –Ω–∞ Etherscan:");
    console.log(`https://sepolia.etherscan.io/address/${dleAddress}#readContract`);
    console.log("\nüí° –ù–∞ Etherscan –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª 'Contract' -> 'Read Contract'");
    console.log("   –∏ –≤—ã–∑–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é 'getDLEInfo' —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ!");
    
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö DLE:", error);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
main()
  .then(() => {
    console.log("\n‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ");
    process.exit(0);
  })
  .catch((error) => {
    console.error("\n‚ùå –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π:", error);
    process.exit(1);
  }); 