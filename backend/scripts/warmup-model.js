#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–æ–≥—Ä–µ–≤–∞ –º–æ–¥–µ–ª–∏ Ollama
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ backend –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –ø–µ—Ä–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
 */

const fetch = require('node-fetch');

const OLLAMA_URL = process.env.OLLAMA_URL || 'http://ollama:11434';
const MODEL_NAME = process.env.OLLAMA_MODEL || 'qwen2.5:7b';

async function warmupModel() {
  // console.log('üî• –†–∞–∑–æ–≥—Ä–µ–≤ –º–æ–¥–µ–ª–∏ Ollama...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Ollama
    const healthResponse = await fetch(`${OLLAMA_URL}/api/tags`);
    if (!healthResponse.ok) {
      throw new Error(`Ollama –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${healthResponse.status}`);
    }
    
          // console.log('‚úÖ Ollama –¥–æ—Å—Ç—É–ø–µ–Ω');
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –¥–ª—è —Ä–∞–∑–æ–≥—Ä–µ–≤–∞ (–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç)
    const warmupResponse = await fetch(`${OLLAMA_URL}/api/chat`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        model: MODEL_NAME,
        messages: [
          { role: 'system', content: '–¢—ã –ø–æ–ª–µ–∑–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.' },
          { role: 'user', content: '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?' }
        ],
        stream: false,
        options: {
          temperature: 0.2,
          num_predict: 64,
          num_ctx: 1024,
          num_thread: 4,
          num_gpu: 1,
          repeat_penalty: 1.1,
          top_k: 30,
          top_p: 0.9
        }
      }),
    });
    
    if (!warmupResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ —Ä–∞–∑–æ–≥—Ä–µ–≤–∞: ${warmupResponse.status}`);
    }
    
    const data = await warmupResponse.json();
          // console.log('‚úÖ –ú–æ–¥–µ–ª—å —Ä–∞–∑–æ–≥—Ä–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ');
      // console.log(`üìù –û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏: ${(data.message?.content || data.response || '').substring(0, 100)}...`);
    
  } catch (error) {
          // console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–æ–≥—Ä–µ–≤–∞ –º–æ–¥–µ–ª–∏:', error.message);
    // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–∞–∑–æ–≥—Ä–µ–≤ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
setTimeout(warmupModel, 5000);

module.exports = { warmupModel }; 