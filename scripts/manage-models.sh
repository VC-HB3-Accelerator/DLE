#!/bin/bash
# Copyright (c) 2024-2025 –¢–∞—Ä–∞–±–∞–Ω–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á
# All rights reserved.
# This software is proprietary and confidential.
# For licensing inquiries: info@hb3-accelerator.com

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏–∏
log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –º–æ–¥–µ–ª–µ–π
check_models_status() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –º–æ–¥–µ–ª–µ–π..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–µ –º–æ–¥–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –ø–∞–º—è—Ç—å
    loaded_models=$(docker exec dapp-ollama ollama ps 2>/dev/null | grep -v "NAME" | wc -l)
    
    if [ "$loaded_models" -gt 0 ]; then
        success "–ú–æ–¥–µ–ª–∏ –≤ –ø–∞–º—è—Ç–∏: $loaded_models –∞–∫—Ç–∏–≤–Ω—ã—Ö"
        docker exec dapp-ollama ollama ps
    else
        warning "–ú–æ–¥–µ–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –ø–∞–º—è—Ç—å"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏
    available_models=$(docker exec dapp-ollama ollama list 2>/dev/null | grep -v "NAME" | wc -l)
    success "–î–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π: $available_models"
}

# –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–µ–π
preload_models() {
    log "–ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–µ–π –≤ –ø–∞–º—è—Ç—å..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Ollama –≥–æ—Ç–æ–≤
    until curl -s http://localhost:11434/api/tags > /dev/null 2>&1; do
        log "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Ollama..."
        sleep 2
    done
    
    success "Ollama –≥–æ—Ç–æ–≤!"
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥–µ–ª–∏
    log "–ó–∞–≥—Ä—É–∑–∫–∞ qwen2.5:7b..."
    docker exec dapp-ollama ollama run qwen2.5:7b "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è" > /dev/null 2>&1 &
    
    log "–ó–∞–≥—Ä—É–∑–∫–∞ mxbai-embed-large:latest..."
    docker exec dapp-ollama ollama run mxbai-embed-large:latest "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è" > /dev/null 2>&1 &
    
    # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
    sleep 10
    
    success "–ú–æ–¥–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!"
    check_models_status
}

# –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –≤ –ø–∞–º—è—Ç–∏
keep_alive() {
    log "–ó–∞–ø—É—Å–∫ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π –≤ –ø–∞–º—è—Ç–∏..."
    
    while true; do
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
        loaded_models=$(docker exec dapp-ollama ollama ps 2>/dev/null | grep -v "NAME" | wc -l)
        
        if [ "$loaded_models" -eq 0 ]; then
            log "–ú–æ–¥–µ–ª–∏ –≤—ã–≥—Ä—É–∂–µ–Ω—ã, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º..."
            preload_models
        else
            log "–ú–æ–¥–µ–ª–∏ –≤ –ø–∞–º—è—Ç–∏: $loaded_models –∞–∫—Ç–∏–≤–Ω—ã—Ö"
        fi
        
        sleep 300  # 5 –º–∏–Ω—É—Ç
    done
}

# –û—á–∏—Å—Ç–∫–∞ –º–æ–¥–µ–ª–µ–π –∏–∑ –ø–∞–º—è—Ç–∏
clear_memory() {
    log "–û—á–∏—Å—Ç–∫–∞ –º–æ–¥–µ–ª–µ–π –∏–∑ –ø–∞–º—è—Ç–∏..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏
    docker exec dapp-ollama ollama ps | grep -v "NAME" | awk '{print $1}' | xargs -I {} docker exec dapp-ollama ollama stop {} 2>/dev/null || true
    
    success "–ü–∞–º—è—Ç—å –æ—á–∏—â–µ–Ω–∞"
    check_models_status
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
show_help() {
    echo "ü§ñ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª—è–º–∏ Ollama"
    echo "================================"
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  status    - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –º–æ–¥–µ–ª–µ–π"
    echo "  preload   - –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª–∏ –≤ –ø–∞–º—è—Ç—å"
    echo "  keep      - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –º–æ–¥–µ–ª–∏ –≤ –ø–∞–º—è—Ç–∏"
    echo "  clear     - –û—á–∏—Å—Ç–∏—Ç—å –ø–∞–º—è—Ç—å"
    echo "  test      - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞"
    echo "  help      - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 status    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å"
    echo "  $0 preload   # –ó–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª–∏"
    echo "  $0 keep      # –î–µ—Ä–∂–∞—Ç—å –≤ –ø–∞–º—è—Ç–∏"
}

# –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
test_performance() {
    log "–¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏..."
    
    # –¢–µ—Å—Ç —Å —Ö–æ–ª–æ–¥–Ω—ã–º —Å—Ç–∞—Ä—Ç–æ–º
    log "–¢–µ—Å—Ç —Ö–æ–ª–æ–¥–Ω–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞..."
    start_time=$(date +%s.%N)
    docker exec dapp-ollama ollama run qwen2.5:7b "–¢–µ—Å—Ç" > /dev/null 2>&1
    end_time=$(date +%s.%N)
    cold_time=$(echo "$end_time - $start_time" | bc)
    
    # –¢–µ—Å—Ç —Å –≥–æ—Ä—è—á–∏–º —Å—Ç–∞—Ä—Ç–æ–º
    log "–¢–µ—Å—Ç –≥–æ—Ä—è—á–µ–≥–æ —Å—Ç–∞—Ä—Ç–∞..."
    start_time=$(date +%s.%N)
    docker exec dapp-ollama ollama run qwen2.5:7b "–¢–µ—Å—Ç" > /dev/null 2>&1
    end_time=$(date +%s.%N)
    hot_time=$(echo "$end_time - $start_time" | bc)
    
    echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞:"
    echo "   –•–æ–ª–æ–¥–Ω—ã–π —Å—Ç–∞—Ä—Ç: ${cold_time}s"
    echo "   –ì–æ—Ä—è—á–∏–π —Å—Ç–∞—Ä—Ç:  ${hot_time}s"
    
    if (( $(echo "$hot_time < $cold_time" | bc -l) )); then
        success "–ú–æ–¥–µ–ª–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –±—ã—Å—Ç—Ä–µ–µ –∏–∑ –ø–∞–º—è—Ç–∏!"
    else
        warning "–ú–æ–¥–µ–ª–∏ –Ω–µ –æ—Å—Ç–∞—é—Ç—Å—è –≤ –ø–∞–º—è—Ç–∏"
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-help}" in
    "status")
        check_models_status
        ;;
    "preload")
        preload_models
        ;;
    "keep")
        keep_alive
        ;;
    "clear")
        clear_memory
        ;;
    "test")
        test_performance
        ;;
    "help"|*)
        show_help
        ;;
esac
