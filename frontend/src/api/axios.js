/**
 * Copyright (c) 2024-2025 –¢–∞—Ä–∞–±–∞–Ω–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á
 * All rights reserved.
 * 
 * This software is proprietary and confidential.
 * Unauthorized copying, modification, or distribution is prohibited.
 * 
 * For licensing inquiries: info@hb3-accelerator.com
 * Website: https://hb3-accelerator.com
 * GitHub: https://github.com/HB3-ACCELERATOR
 */

import axios from 'axios';

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä axios —Å –±–∞–∑–æ–≤—ã–º URL –∏ —Ç–∞–π–º–∞—É—Ç–∞–º–∏
const api = axios.create({
  baseURL: '/api',
  withCredentials: true,
  timeout: 10 * 60 * 1000, // 10 –º–∏–Ω—É—Ç —Ç–∞–π–º–∞—É—Ç –¥–ª—è –¥–µ–ø–ª–æ—è
  headers: {
    'Content-Type': 'application/json',
  },
});

// –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤
api.interceptors.request.use(
  (config) => {
    config.withCredentials = true; // –í–∞–∂–Ω–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    
    // DEBUG: –ª–æ–≥–∏—Ä—É–µ–º –≤—Å–µ –∏—Å—Ö–æ–¥—è—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã
    console.log('üåê [AXIOS] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å:', {
      method: config.method?.toUpperCase(),
      url: config.url,
      baseURL: config.baseURL,
      fullURL: config.baseURL + config.url,
      data: config.data ? '[–î–ê–ù–ù–´–ï]' : '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
    });

    return config;
  },
  (error) => {
    console.error('üåê [AXIOS] –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π:', error);
    return Promise.reject(error);
  }
);

// –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
api.interceptors.response.use(
  (response) => {
    // DEBUG: –ª–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    console.log('üåê [AXIOS] –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç:', {
      method: response.config.method?.toUpperCase(),
      url: response.config.url,
      status: response.status,
      statusText: response.statusText,
      contentType: response.headers['content-type']
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ JSON
    if (response.headers['content-type'] && 
        !response.headers['content-type'].includes('application/json')) {
      // console.warn('Server returned non-JSON response:', response.headers['content-type']);
      // –ï—Å–ª–∏ —ç—Ç–æ HTML, –∑–Ω–∞—á–∏—Ç, –∑–∞–ø—Ä–æ—Å —É—à—ë–ª –Ω–µ —Ç—É–¥–∞
      if (response.headers['content-type'].includes('text/html')) {
        throw new Error('Server returned HTML instead of JSON. Check API endpoint.');
      }
    }
    return response;
  },
  (error) => {
    // DEBUG: –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
    console.error('üåê [AXIOS] –û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞:', {
      method: error.config?.method?.toUpperCase(),
      url: error.config?.url,
      message: error.message,
      code: error.code,
      status: error.response?.status,
      statusText: error.response?.statusText
    });
    
    // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç HTML –≤ response
    if (error.response && error.response.data && 
        typeof error.response.data === 'string' && 
        error.response.data.includes('<!DOCTYPE')) {
      // console.error('API Error: Server returned HTML instead of JSON');
      error.message = '–û—à–∏–±–∫–∞: —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª HTML –≤–º–µ—Å—Ç–æ JSON. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API.';
    }
    return Promise.reject(error);
  }
);

// –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ—Å—Ç–µ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
const sendGuestMessageToServer = async (messageText) => {
  try {
    await axios.post('/chat/guest-message', {
      message: messageText,
      // language: userLanguage.value, // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    }, { withCredentials: true });
  } catch (error) {
    // console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≥–æ—Å—Ç–µ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä:', error);
  }
};

export default api;
