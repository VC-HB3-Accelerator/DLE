/**
 * Copyright (c) 2024-2025 –¢–∞—Ä–∞–±–∞–Ω–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á
 * All rights reserved.
 * 
 * This software is proprietary and confidential.
 * Unauthorized copying, modification, or distribution is prohibited.
 * 
 * For licensing inquiries: info@hb3-accelerator.com
 * Website: https://hb3-accelerator.com
 * GitHub: https://github.com/HB3-ACCELERATOR
 */

import { ref, onMounted, onUnmounted } from 'vue';
import websocketServiceModule from '../services/websocketService';

const { websocketService } = websocketServiceModule;

export function useTagsWebSocket() {
  console.log('üè∑Ô∏è [useTagsWebSocket] –ö–æ–º–ø–æ–∑–∞–±–ª —Å–æ–∑–¥–∞–Ω');
  const tagsUpdateCallbacks = ref([]);
  const isSubscribed = ref(false);

  function onTagsUpdate(callback) {
    console.log('üè∑Ô∏è [useTagsWebSocket] –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–ª–±—ç–∫–∞');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ —ç—Ç–æ—Ç –∫–æ–ª–±—ç–∫
    if (tagsUpdateCallbacks.value.includes(callback)) {
      console.log('üè∑Ô∏è [useTagsWebSocket] –ö–æ–ª–±—ç–∫ —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
      return () => {
        const index = tagsUpdateCallbacks.value.indexOf(callback);
        if (index > -1) {
          tagsUpdateCallbacks.value.splice(index, 1);
        }
      };
    }
    
    tagsUpdateCallbacks.value.push(callback);
    console.log('üè∑Ô∏è [useTagsWebSocket] –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–±—ç–∫–æ–≤:', tagsUpdateCallbacks.value.length);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ø–∏—Å–∫–∏
    return () => {
      console.log('üè∑Ô∏è [useTagsWebSocket] –û—Ç–ø–∏—Å–∫–∞ –∫–æ–ª–±—ç–∫–∞');
      const index = tagsUpdateCallbacks.value.indexOf(callback);
      if (index > -1) {
        tagsUpdateCallbacks.value.splice(index, 1);
        console.log('üè∑Ô∏è [useTagsWebSocket] –ö–æ–ª–±—ç–∫ —É–¥–∞–ª–µ–Ω, –æ—Å—Ç–∞–ª–æ—Å—å:', tagsUpdateCallbacks.value.length);
      }
    };
  }

  function handleTagsUpdate(data) {
    console.log('üè∑Ô∏è [useTagsWebSocket] –ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–µ–≥–æ–≤:', data);
    console.log('üè∑Ô∏è [useTagsWebSocket] –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–ª–±—ç–∫–æ–≤:', tagsUpdateCallbacks.value.length);
    
    // –í—ã–∑—ã–≤–∞–µ–º –≤—Å–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–ª–±—ç–∫–∏
    tagsUpdateCallbacks.value.forEach((callback, index) => {
      try {
        console.log('üè∑Ô∏è [useTagsWebSocket] –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–ª–±—ç–∫ #', index);
        callback(data);
      } catch (error) {
        console.error('üè∑Ô∏è [useTagsWebSocket] –û—à–∏–±–∫–∞ –≤ –∫–æ–ª–±—ç–∫–µ #', index, ':', error);
      }
    });
  }

  onMounted(() => {
    console.log('üè∑Ô∏è [useTagsWebSocket] onMounted –≤—ã–∑–≤–∞–Ω');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –ª–∏ —É–∂–µ
    if (isSubscribed.value) {
      console.log('üè∑Ô∏è [useTagsWebSocket] –£–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
      return;
    }
    
    console.log('üè∑Ô∏è [useTagsWebSocket] –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ tags-updated');
    websocketService.on('tags-updated', handleTagsUpdate);
    isSubscribed.value = true;
    console.log('üè∑Ô∏è [useTagsWebSocket] –ü–æ–¥–ø–∏—Å–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  });

  onUnmounted(() => {
    console.log('üè∑Ô∏è [useTagsWebSocket] onUnmounted –≤—ã–∑–≤–∞–Ω');
    if (isSubscribed.value) {
      websocketService.off('tags-updated', handleTagsUpdate);
      isSubscribed.value = false;
      console.log('üè∑Ô∏è [useTagsWebSocket] –û—Ç–ø–∏—Å–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    }
    // –û—á–∏—â–∞–µ–º –≤—Å–µ –∫–æ–ª–±—ç–∫–∏
    tagsUpdateCallbacks.value = [];
    console.log('üè∑Ô∏è [useTagsWebSocket] –ö–æ–ª–±—ç–∫–∏ –æ—á–∏—â–µ–Ω—ã');
  });

  return {
    onTagsUpdate
  };
} 