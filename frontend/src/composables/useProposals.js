import { ref, computed } from 'vue';
import { getProposals } from '@/services/proposalsService';
import { ethers } from 'ethers';
import { useProposalValidation } from './useProposalValidation';
import { voteForProposal, executeProposal as executeProposalUtil, cancelProposal as cancelProposalUtil, checkTokenBalance } from '@/utils/dle-contract';

// –§—É–Ω–∫—Ü–∏—è checkVoteStatus —É–¥–∞–ª–µ–Ω–∞ - –≤ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ DLE –Ω–µ—Ç –ø—É–±–ª–∏—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ hasVoted
// –§—É–Ω–∫—Ü–∏—è checkTokenBalance –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ useDleContract.js

// –§—É–Ω–∫—Ü–∏—è sendTransactionToWallet —É–¥–∞–ª–µ–Ω–∞ - —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä—è–º–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–º

export function useProposals(dleAddress, isAuthenticated, userAddress) {
  const proposals = ref([]);
  const filteredProposals = ref([]);
  const isLoading = ref(false);
  const isVoting = ref(false);
  const isExecuting = ref(false);
  const isCancelling = ref(false);
  const statusFilter = ref('');
  const searchQuery = ref('');
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ utils/dle-contract.js
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
  const {
    validateProposals,
    filterRealProposals,
    filterActiveProposals,
    validationStats,
    isValidating
  } = useProposalValidation();

  const loadProposals = async () => {
    if (!dleAddress.value) {
      console.warn('–ê–¥—Ä–µ—Å DLE –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    try {
      isLoading.value = true;
      const response = await getProposals(dleAddress.value);
      
      if (response.success) {
        const rawProposals = response.data.proposals || [];
        
        console.log(`[Proposals] –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: ${rawProposals.length}`);
        console.log(`[Proposals] –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–ª–æ–∫—á–µ–π–Ω–∞:`, rawProposals);
        
        // –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–∂–¥–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏
        rawProposals.forEach((proposal, index) => {
          console.log(`[Proposals] –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ${index}:`, {
            id: proposal.id,
            description: proposal.description,
            state: proposal.state,
            forVotes: proposal.forVotes,
            againstVotes: proposal.againstVotes,
            quorumRequired: proposal.quorumRequired,
            quorumReached: proposal.quorumReached,
            executed: proposal.executed,
            canceled: proposal.canceled,
            initiator: proposal.initiator,
            chainId: proposal.chainId,
            transactionHash: proposal.transactionHash
          });
        });
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
        const validationResult = validateProposals(rawProposals);
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        const realProposals = filterRealProposals(validationResult.validProposals);
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (–∏—Å–∫–ª—é—á–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∏ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ)
        const activeProposals = filterActiveProposals(realProposals);
        
        console.log(`[Proposals] –í–∞–ª–∏–¥–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: ${validationResult.validCount}`);
        console.log(`[Proposals] –†–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: ${realProposals.length}`);
        console.log(`[Proposals] –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: ${activeProposals.length}`);
        
        if (validationResult.errorCount > 0) {
          console.warn(`[Proposals] –ù–∞–π–¥–µ–Ω–æ ${validationResult.errorCount} –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π —Å –æ—à–∏–±–∫–∞–º–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏`);
        }
        
        proposals.value = activeProposals;
        filterProposals();
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π:', error);
    } finally {
      isLoading.value = false;
    }
  };

  const filterProposals = () => {
    if (!proposals.value || proposals.value.length === 0) {
      filteredProposals.value = [];
      return;
    }
    
    let filtered = [...proposals.value];

    if (statusFilter.value) {
      filtered = filtered.filter(proposal => {
        switch (statusFilter.value) {
          case 'active': return proposal.state === 0; // Pending
          case 'succeeded': return proposal.state === 1; // Succeeded
          case 'defeated': return proposal.state === 2; // Defeated
          case 'executed': return proposal.state === 3; // Executed
          case 'cancelled': return proposal.state === 4; // Canceled
          case 'ready': return proposal.state === 5; // ReadyForExecution
          default: return true;
        }
      });
    }

    if (searchQuery.value) {
      const query = searchQuery.value.toLowerCase();
      filtered = filtered.filter(proposal =>
        proposal.description.toLowerCase().includes(query) ||
        proposal.initiator.toLowerCase().includes(query) ||
        proposal.uniqueId.toLowerCase().includes(query)
      );
    }

    filteredProposals.value = filtered;
  };

  const voteOnProposal = async (proposalId, support) => {
    try {
      console.log('üöÄ [VOTE] –ù–∞—á–∏–Ω–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ DLE –∫–æ–Ω—Ç—Ä–∞–∫—Ç:', { proposalId, support, dleAddress: dleAddress.value, userAddress: userAddress.value });
      isVoting.value = true;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ MetaMask
      if (!window.ethereum) {
        throw new Error('MetaMask –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ MetaMask.');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
      console.log('üîç [DEBUG] –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è...');
      const proposal = proposals.value.find(p => p.id === proposalId);
      if (!proposal) {
        throw new Error('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      }
      
      console.log('üìä [DEBUG] –î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:', {
        id: proposal.id,
        state: proposal.state,
        deadline: proposal.deadline,
        forVotes: proposal.forVotes,
        againstVotes: proposal.againstVotes,
        executed: proposal.executed,
        canceled: proposal.canceled
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ (Pending)
      if (proposal.state !== 0) {
        const statusText = getProposalStatusText(proposal.state);
        throw new Error(`–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ (—Å—Ç–∞—Ç—É—Å: ${statusText}). –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.`);
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –∏ –Ω–µ –æ—Ç–º–µ–Ω–µ–Ω–æ
      if (proposal.executed) {
        throw new Error('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.');
      }
      
      if (proposal.canceled) {
        throw new Error('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º deadline
      const currentTime = Math.floor(Date.now() / 1000);
      if (proposal.deadline && currentTime > proposal.deadline) {
        throw new Error('–í—Ä–µ–º—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ. –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —Ç–æ–∫–µ–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      console.log('üí∞ [DEBUG] –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —Ç–æ–∫–µ–Ω–æ–≤...');
      try {
        const balanceCheck = await checkTokenBalance(dleAddress.value, userAddress.value);
        console.log('üí∞ [DEBUG] –ë–∞–ª–∞–Ω—Å —Ç–æ–∫–µ–Ω–æ–≤:', balanceCheck);
        
        if (!balanceCheck.hasTokens) {
          throw new Error('–£ –≤–∞—Å –Ω–µ—Ç —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å —Ç–æ–∫–µ–Ω—ã DLE –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏.');
        }
      } catch (balanceError) {
        console.warn('‚ö†Ô∏è [DEBUG] –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞ (–ø—Ä–æ–¥–æ–ª–∂–∞–µ–º):', balanceError.message);
        // –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç—å –∫–æ—à–µ–ª—å–∫–∞
      console.log('üåê [DEBUG] –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç—å –∫–æ—à–µ–ª—å–∫–∞...');
      try {
        const chainId = await window.ethereum.request({ method: 'eth_chainId' });
        console.log('üåê [DEBUG] –¢–µ–∫—É—â–∞—è —Å–µ—Ç—å:', chainId);
        console.log('üåê [DEBUG] –°–µ—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:', proposal.chainId);
        
        if (chainId !== proposal.chainId) {
          throw new Error(`–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å–µ—Ç—å! –¢–µ–∫—É—â–∞—è —Å–µ—Ç—å: ${chainId}, —Ç—Ä–µ–±—É–µ—Ç—Å—è: ${proposal.chainId}`);
        }
      } catch (networkError) {
        console.warn('‚ö†Ô∏è [DEBUG] –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ç–∏ (–ø—Ä–æ–¥–æ–ª–∂–∞–µ–º):', networkError.message);
      }
      
      // –ì–æ–ª–æ—Å—É–µ–º —á–µ—Ä–µ–∑ –≥–æ—Ç–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ utils/dle-contract.js
      console.log('üó≥Ô∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç...');
      const result = await voteForProposal(dleAddress.value, proposalId, support);
      
      console.log('‚úÖ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', result.txHash);
      alert(`–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –•–µ—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${result.txHash}`);
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
      console.log('üîÑ [VOTE] –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è...');
      await loadProposals();
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤ –±–ª–æ–∫—á–µ–π–Ω–µ
      setTimeout(async () => {
        console.log('üîÑ [VOTE] –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...');
        await loadProposals();
      }, 3000);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è:', error);
      
      // –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
      let errorMessage = error.message;
      
      if (error.message.includes('execution reverted')) {
        if (error.data === '0xe7005635') {
          errorMessage = '–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–º. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n' +
            '‚Ä¢ –í—ã —É–∂–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –∑–∞ —ç—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ\n' +
            '‚Ä¢ –£ –≤–∞—Å –Ω–µ—Ç —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\n' +
            '‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ\n' +
            '‚Ä¢ –í—Ä–µ–º—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ';
        } else if (error.data === '0xc7567e07') {
          errorMessage = '–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–º. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n' +
            '‚Ä¢ –í—ã —É–∂–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –∑–∞ —ç—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ\n' +
            '‚Ä¢ –£ –≤–∞—Å –Ω–µ—Ç —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\n' +
            '‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ\n' +
            '‚Ä¢ –í—Ä–µ–º—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ\n' +
            '‚Ä¢ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å–µ—Ç—å –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è';
        } else {
          errorMessage = `–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–º (–∫–æ–¥: ${error.data}). –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å–ª–æ–≤–∏—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.`;
        }
      } else if (error.message.includes('user rejected')) {
        errorMessage = '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º';
      } else if (error.message.includes('insufficient funds')) {
        errorMessage = '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –æ–ø–ª–∞—Ç—ã –≥–∞–∑–∞';
      }
      
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏: ' + errorMessage);
    } finally {
      isVoting.value = false;
    }
  };

  const executeProposal = async (proposalId) => {
    try {
      console.log('‚ö° [EXECUTE] –ò—Å–ø–æ–ª–Ω—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ DLE –∫–æ–Ω—Ç—Ä–∞–∫—Ç:', { proposalId, dleAddress: dleAddress.value });
      isExecuting.value = true;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º
      console.log('üîç [DEBUG] –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è...');
      const proposal = proposals.value.find(p => p.id === proposalId);
      if (!proposal) {
        throw new Error('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      }
      
      console.log('üìä [DEBUG] –î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:', {
        id: proposal.id,
        state: proposal.state,
        executed: proposal.executed,
        canceled: proposal.canceled,
        quorumReached: proposal.quorumReached
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å
      if (proposal.executed) {
        throw new Error('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.');
      }
      
      if (proposal.canceled) {
        throw new Error('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é
      if (proposal.state !== 5) {
        const statusText = getProposalStatusText(proposal.state);
        throw new Error(`–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –≥–æ—Ç–æ–≤–æ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é (—Å—Ç–∞—Ç—É—Å: ${statusText}). –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –≤ —Å—Ç–∞—Ç—É—Å–µ "–ì–æ—Ç–æ–≤–æ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é".`);
      }
      
      // –ò—Å–ø–æ–ª–Ω—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –≥–æ—Ç–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ utils/dle-contract.js
      const result = await executeProposalUtil(dleAddress.value, proposalId);
      
      console.log('‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏—Å–ø–æ–ª–Ω–µ–Ω–æ:', result.txHash);
      alert(`–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏—Å–ø–æ–ª–Ω–µ–Ω–æ! –•–µ—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${result.txHash}`);
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤ UI
      updateProposalState(proposalId, {
        executed: true,
        state: 1, // –í—ã–ø–æ–ª–Ω–µ–Ω–æ
        canceled: false
      });
      
      await loadProposals(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:', error);
      
      // –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
      let errorMessage = error.message;
      
      if (error.message.includes('execution reverted')) {
        errorMessage = '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–º. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n' +
          '‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ\n' +
          '‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ\n' +
          '‚Ä¢ –ö–≤–æ—Ä—É–º –Ω–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç\n' +
          '‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ';
      } else if (error.message.includes('user rejected')) {
        errorMessage = '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º';
      } else if (error.message.includes('insufficient funds')) {
        errorMessage = '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –æ–ø–ª–∞—Ç—ã –≥–∞–∑–∞';
      }
      
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: ' + errorMessage);
    } finally {
      isExecuting.value = false;
    }
  };

  const cancelProposal = async (proposalId, reason = '–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º') => {
    try {
      console.log('‚ùå [CANCEL] –û—Ç–º–µ–Ω—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ DLE –∫–æ–Ω—Ç—Ä–∞–∫—Ç:', { proposalId, reason, dleAddress: dleAddress.value });
      isCancelling.value = true;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –æ—Ç–º–µ–Ω–æ–π
      console.log('üîç [DEBUG] –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–º–µ–Ω—ã...');
      const proposal = proposals.value.find(p => p.id === proposalId);
      if (!proposal) {
        throw new Error('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      }
      
      console.log('üìä [DEBUG] –î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–º–µ–Ω—ã:', {
        id: proposal.id,
        state: proposal.state,
        executed: proposal.executed,
        canceled: proposal.canceled,
        deadline: proposal.deadline
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å
      if (proposal.executed) {
        throw new Error('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –û—Ç–º–µ–Ω–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.');
      }
      
      if (proposal.canceled) {
        throw new Error('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–º–µ–Ω–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ (Pending)
      if (proposal.state !== 0) {
        const statusText = getProposalStatusText(proposal.state);
        throw new Error(`–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ (—Å—Ç–∞—Ç—É—Å: ${statusText}). –û—Ç–º–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.`);
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä–æ–º
      if (proposal.initiator !== userAddress.value) {
        throw new Error('–¢–æ–ª—å–∫–æ –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –º–æ–∂–µ—Ç –µ–≥–æ –æ—Ç–º–µ–Ω–∏—Ç—å.');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º deadline (–Ω—É–∂–µ–Ω –∑–∞–ø–∞—Å 15 –º–∏–Ω—É—Ç)
      const currentTime = Math.floor(Date.now() / 1000);
      if (proposal.deadline) {
        const timeRemaining = proposal.deadline - currentTime;
        if (timeRemaining <= 900) { // 15 –º–∏–Ω—É—Ç –∑–∞–ø–∞—Å
          throw new Error('–í—Ä–µ–º—è –¥–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å—Ç–µ–∫–ª–æ. –û—Ç–º–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–∞ —Ç–æ–ª—å–∫–æ –∑–∞ 15 –º–∏–Ω—É—Ç –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.');
        }
      }
      
      // –û—Ç–º–µ–Ω—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –≥–æ—Ç–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ utils/dle-contract.js
      const result = await cancelProposalUtil(dleAddress.value, proposalId, reason);
      
      console.log('‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ:', result.txHash);
      alert(`–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ! –•–µ—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${result.txHash}`);
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤ UI
      updateProposalState(proposalId, {
        canceled: true,
        state: 2, // –û—Ç–º–µ–Ω–µ–Ω–æ
        executed: false
      });
      
      await loadProposals(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:', error);
      
      // –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
      let errorMessage = error.message;
      
      if (error.message.includes('execution reverted')) {
        errorMessage = '–û—Ç–º–µ–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–º. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n' +
          '‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –æ—Ç–º–µ–Ω–µ–Ω–æ\n' +
          '‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ\n' +
          '‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ\n' +
          '‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–º–µ–Ω—ã';
      } else if (error.message.includes('user rejected')) {
        errorMessage = '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º';
      } else if (error.message.includes('insufficient funds')) {
        errorMessage = '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –æ–ø–ª–∞—Ç—ã –≥–∞–∑–∞';
      }
      
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: ' + errorMessage);
    } finally {
      isCancelling.value = false;
    }
  };

  const getProposalStatusClass = (state) => {
    switch (state) {
      case 0: return 'status-active';        // Pending
      case 1: return 'status-succeeded';      // Succeeded
      case 2: return 'status-defeated';       // Defeated
      case 3: return 'status-executed';       // Executed
      case 4: return 'status-cancelled';     // Canceled
      case 5: return 'status-ready';          // ReadyForExecution
      default: return 'status-active';
    }
  };

  const getProposalStatusText = (state) => {
    switch (state) {
      case 0: return '–ê–∫—Ç–∏–≤–Ω–æ–µ';
      case 1: return '–£—Å–ø–µ—à–Ω–æ–µ';
      case 2: return '–û—Ç–∫–ª–æ–Ω–µ–Ω–Ω–æ–µ';
      case 3: return '–í—ã–ø–æ–ª–Ω–µ–Ω–æ';
      case 4: return '–û—Ç–º–µ–Ω–µ–Ω–æ';
      case 5: return '–ì–æ—Ç–æ–≤–æ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é';
      default: return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }
  };

  const getQuorumPercentage = (proposal) => {
    // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    const forVotes = Number(proposal.forVotes || 0);
    const againstVotes = Number(proposal.againstVotes || 0);
    const totalVotes = forVotes + againstVotes;
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π totalSupply –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ fallback
    const totalSupply = Number(proposal.totalSupply || 3e+24); // Fallback –∫ 3M DLE
    
    console.log(`üìä [QUORUM] –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ${proposal.id}:`, {
      forVotes: forVotes,
      againstVotes: againstVotes,
      totalVotes: totalVotes,
      totalSupply: totalSupply,
      forVotesFormatted: `${(forVotes / 1e+18).toFixed(2)} DLE`,
      againstVotesFormatted: `${(againstVotes / 1e+18).toFixed(2)} DLE`,
      totalVotesFormatted: `${(totalVotes / 1e+18).toFixed(2)} DLE`,
      totalSupplyFormatted: `${(totalSupply / 1e+18).toFixed(2)} DLE`
    });
    
    const percentage = totalSupply > 0 ? (totalVotes / totalSupply) * 100 : 0;
    return percentage.toFixed(2);
  };

  const getRequiredQuorumPercentage = (proposal) => {
    // –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–µ–±—É–µ–º—ã–π –∫–≤–æ—Ä—É–º –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    const requiredQuorum = Number(proposal.quorumRequired || 0);
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π totalSupply –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ fallback
    const totalSupply = Number(proposal.totalSupply || 3e+24); // Fallback –∫ 3M DLE
    
    console.log(`üìä [REQUIRED QUORUM] –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ${proposal.id}:`, {
      requiredQuorum: requiredQuorum,
      totalSupply: totalSupply,
      requiredQuorumFormatted: `${(requiredQuorum / 1e+18).toFixed(2)} DLE`,
      totalSupplyFormatted: `${(totalSupply / 1e+18).toFixed(2)} DLE`
    });
    
    const percentage = totalSupply > 0 ? (requiredQuorum / totalSupply) * 100 : 0;
    return percentage.toFixed(2);
  };

  const canVote = (proposal) => {
    return proposal.state === 0; // Pending - —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
  };

  const canExecute = (proposal) => {
    return proposal.state === 5; // ReadyForExecution - –≥–æ—Ç–æ–≤–æ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é
  };

  const canCancel = (proposal) => {
    // –ú–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (Pending)
    return proposal.state === 0 && 
           !proposal.executed && 
           !proposal.canceled;
  };

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤ UI
  const updateProposalState = (proposalId, updates) => {
    const proposal = proposals.value.find(p => p.id === proposalId);
    if (proposal) {
      Object.assign(proposal, updates);
      console.log(`üîÑ [UI] –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è ${proposalId}:`, updates);
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
      filterProposals();
    }
  };

  return {
    proposals,
    filteredProposals,
    isLoading,
    isVoting,
    isExecuting,
    isCancelling,
    statusFilter,
    searchQuery,
    loadProposals,
    filterProposals,
    voteOnProposal,
    executeProposal,
    cancelProposal,
    getProposalStatusClass,
    getProposalStatusText,
    getQuorumPercentage,
    getRequiredQuorumPercentage,
    canVote,
    canExecute,
    canCancel,
    updateProposalState,
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    validationStats,
    isValidating
  };
}