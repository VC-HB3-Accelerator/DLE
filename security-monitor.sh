#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è DLE
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ IP –∞–¥—Ä–µ—Å–∞ –∏ –¥–æ–º–µ–Ω—ã

LOG_FILE="/var/log/nginx/access.log"
SUSPICIOUS_LOG_FILE="/var/log/nginx/suspicious_domains.log"
BLOCKED_IPS_FILE="/tmp/blocked_ips.txt"
SUSPICIOUS_DOMAINS_FILE="/tmp/suspicious_domains.txt"
NGINX_CONTAINER="dapp-frontend-nginx"
WAF_CONF_FILE="/etc/nginx/conf.d/waf.conf"

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
touch "$BLOCKED_IPS_FILE"
touch "$SUSPICIOUS_DOMAINS_FILE"

echo "üîí –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ DLE..."
echo "üìä –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤ nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: $NGINX_CONTAINER"
echo "üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ IP: $BLOCKED_IPS_FILE"
echo "üåê –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –¥–æ–º–µ–Ω—ã: $SUSPICIOUS_DOMAINS_FILE"

# –°–ø–∏—Å–æ–∫ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤
SUSPICIOUS_DOMAINS=(
    "akamai-inputs-"
    "gosipgambar"
    "gitlab.cloud"
    "autodiscover.home"
    "akamai-san"
    "akamai-inputs-cleanaway"
    "akamai-inputs-hgmccarterenglish"
    "akamai-inputs-nbpdnj"
    "akamai-inputs-rvc"
    "akamai-inputs-erau"
    "akamai-inputs-notion"
    "bestcupcakerecipes"
    "usmc1"
    "test"
    "admin"
    "dev"
    "staging"
    "beta"
    "demo"
    "old"
    "new"
    "backup"
)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è WAF –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
create_waf_config() {
    docker exec "$NGINX_CONTAINER" sh -c "
        cat > $WAF_CONF_FILE << 'EOF'
# WAF –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö IP
geo \$bad_ip {
    default 0;
    # –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ IP –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è —Å—é–¥–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
EOF
    "
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ IP
block_ip() {
    local ip=$1
    local reason=$2
    
    # –ò—Å–∫–ª—é—á–∞–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ Docker IP –∞–¥—Ä–µ—Å–∞
    if [[ "$ip" =~ ^172\.(1[6-9]|2[0-9]|3[0-1])\. ]] || [[ "$ip" =~ ^10\. ]] || [[ "$ip" =~ ^192\.168\. ]]; then
        echo "üîí –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π IP: $ip (–ø—Ä–∏—á–∏–Ω–∞: $reason)"
        return
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ IP
    if grep -q "^$ip$" "$BLOCKED_IPS_FILE"; then
        return
    fi
    
    echo "$ip" >> "$BLOCKED_IPS_FILE"
    echo "üö´ –ë–ª–æ–∫–∏—Ä—É–µ–º IP: $ip (–ø—Ä–∏—á–∏–Ω–∞: $reason)"
    
    # –î–æ–±–∞–≤–ª—è–µ–º IP –≤ nginx WAF –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    docker exec "$NGINX_CONTAINER" sh -c "
        if [ ! -f $WAF_CONF_FILE ]; then
            create_waf_config
        fi
        
        # –î–æ–±–∞–≤–ª—è–µ–º IP –≤ WAF –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        sed -i '/default 0;/a\\    $ip 1; # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω: $reason' $WAF_CONF_FILE
        
        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º nginx
        nginx -s reload
    "
    
    echo "‚úÖ IP $ip –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ nginx"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤
log_suspicious_domain() {
    local domain=$1
    local ip=$2
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ª–æ–≥–∏—Ä–æ–≤–∞–ª–∏ –ª–∏ —É–∂–µ —ç—Ç–æ—Ç –¥–æ–º–µ–Ω
    if grep -q "^$domain$" "$SUSPICIOUS_DOMAINS_FILE"; then
        return
    fi
    
    echo "$domain" >> "$SUSPICIOUS_DOMAINS_FILE"
    echo "üåê –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ–º–µ–Ω: $domain (IP: $ip)"
    
    # –ë–ª–æ–∫–∏—Ä—É–µ–º IP, –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–º—É –¥–æ–º–µ–Ω—É
    if [ -n "$ip" ]; then
        block_ip "$ip" "–û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–º—É –¥–æ–º–µ–Ω—É: $domain"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ Docker –ª–æ–≥–æ–≤ nginx
analyze_docker_logs() {
    echo "üîç –ê–Ω–∞–ª–∏–∑ Docker –ª–æ–≥–æ–≤ nginx –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –∞—Ç–∞–∫..."
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–∏ nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    docker logs --follow "$NGINX_CONTAINER" | while read line; do
        # –ò—â–µ–º HTTP –∑–∞–ø—Ä–æ—Å—ã –≤ –ª–æ–≥–∞—Ö
        if echo "$line" | grep -qE "(GET|POST|HEAD|PUT|DELETE|OPTIONS)"; then
            # –ò–∑–≤–ª–µ–∫–∞–µ–º IP –∞–¥—Ä–µ—Å
            ip=$(echo "$line" | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}')
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω –∏–∑ Host –∑–∞–≥–æ–ª–æ–≤–∫–∞
            domain=$(echo "$line" | grep -oE 'Host: [^[:space:]]+' | sed 's/Host: //')
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º User-Agent
            user_agent=$(echo "$line" | grep -oE 'User-Agent: [^[:space:]]+' | sed 's/User-Agent: //')
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º URI
            uri=$(echo "$line" | grep -oE '(GET|POST|HEAD|PUT|DELETE|OPTIONS) [^[:space:]]+' | awk '{print $2}')
            
            if [ -n "$ip" ]; then
                echo "üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å: $ip -> $domain -> $uri"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
                if echo "$uri" | grep -q "\.env\|\.config\|\.ini\|\.sql\|\.bak\|\.log"; then
                    block_ip "$ip" "–ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º —Ñ–∞–π–ª–∞–º: $uri"
                fi
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π –∏ –∞—Ä—Ö–∏–≤–æ–≤
                if echo "$uri" | grep -q "backup\|backups\|bak\|old\|restore\|\.tar\|\.gz\|sftp-config"; then
                    block_ip "$ip" "–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: $uri"
                fi
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–¥–¥–æ–º–µ–Ω—ã
                if echo "$domain" | grep -q "bestcupcakerecipes\|usmc1\|test\|admin\|dev\|staging"; then
                    block_ip "$ip" "–ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–¥–¥–æ–º–µ–Ω–∞–º: $domain"
                fi
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å—Ç–∞—Ä—ã–µ User-Agent
                if echo "$user_agent" | grep -q "Chrome/[1-7][0-9]\."; then
                    block_ip "$ip" "–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π User-Agent (—Å—Ç–∞—Ä—ã–π Chrome): $user_agent"
                fi
                
                if echo "$user_agent" | grep -q "Safari/[1-5][0-9][0-9]\."; then
                    block_ip "$ip" "–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π User-Agent (—Å—Ç–∞—Ä—ã–π Safari): $user_agent"
                fi
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ —Å–∫–∞–Ω–µ—Ä—ã
                if echo "$user_agent" | grep -qi "bot\|crawler\|spider\|scanner\|nmap\|sqlmap"; then
                    block_ip "$ip" "–ò–∑–≤–µ—Å—Ç–Ω—ã–π —Å–∫–∞–Ω–µ—Ä/–±–æ—Ç: $user_agent"
                fi
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –¥–æ–º–µ–Ω—ã
                for suspicious in "${SUSPICIOUS_DOMAINS[@]}"; do
                    if echo "$domain" | grep -qi "$suspicious"; then
                        log_suspicious_domain "$domain" "$ip"
                        break
                    fi
                done
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã (DDoS)
                request_count=$(docker logs "$NGINX_CONTAINER" | grep "$ip" | wc -l)
                if [ "$request_count" -gt 100 ]; then
                    block_ip "$ip" "–ü–æ–¥–æ–∑—Ä–µ–Ω–∏–µ –Ω–∞ DDoS ($request_count –∑–∞–ø—Ä–æ—Å–æ–≤)"
                fi
            fi
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
show_stats() {
    echo "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:"
    echo "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö IP: $(wc -l < "$BLOCKED_IPS_FILE")"
    echo "–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤: $(wc -l < "$SUSPICIOUS_DOMAINS_FILE")"
    echo ""
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ IP:"
    tail -5 "$BLOCKED_IPS_FILE" 2>/dev/null || echo "–ù–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö IP"
    echo ""
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –¥–æ–º–µ–Ω—ã:"
    tail -5 "$SUSPICIOUS_DOMAINS_FILE" 2>/dev/null || echo "–ù–µ—Ç –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤"
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WAF –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WAF –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
create_waf_config

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
while true; do
    echo "üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏... $(date)"
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–∏ –≤ —Ñ–æ–Ω–µ
    analyze_docker_logs &
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
    show_stats
    
    # –ñ–¥–µ–º 5 –º–∏–Ω—É—Ç –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
    sleep 300
done 