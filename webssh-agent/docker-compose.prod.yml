# Copyright (c) 2024-2025 –¢–∞—Ä–∞–±–∞–Ω–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á
# All rights reserved.
# This software is proprietary and confidential.
# For licensing inquiries: info@hb3-accelerator.com

# Production docker-compose –¥–ª—è VDS
services:
  postgres:
    image: postgres:16
    container_name: dapp-postgres
    restart: unless-stopped
    networks:
      - dapp_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/data:/mnt/isic_csv_data
    environment:
      - POSTGRES_DB=${DB_NAME:-dapp_db}
      - POSTGRES_USER=${DB_USER:-dapp_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-dapp_password}
      # üÜï SCRAM-SHA-256 –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256 --auth-local=scram-sha-256
    # –ù–ï –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç 5432 –Ω–∞—Ä—É–∂—É - —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ Docker —Å–µ—Ç–∏
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U ${DB_USER:-dapp_user} -d ${DB_NAME:-dapp_db}
      interval: 5s
      timeout: 5s
      retries: 5

  ollama:
    image: digital_legal_entitydle-ollama:latest
    container_name: dapp-ollama
    restart: unless-stopped
    networks:
      - dapp_network
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "3"
    volumes:
      - ollama_data:/root/.ollama
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 6G
        reservations:
          cpus: '1.0'
          memory: 4G
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=*
      - OLLAMA_NUM_PARALLEL=2
      - OLLAMA_NUM_GPU=0
      - OLLAMA_KEEP_ALIVE=86400
      - OLLAMA_MODEL_TIMEOUT=0
      - OLLAMA_MAX_LOADED_MODELS=2
      - OLLAMA_FLASH_ATTENTION=0
      - OLLAMA_LLM_LIBRARY=auto
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  vector-search:
    image: digital_legal_entitydle-vector-search:latest
    container_name: dapp-vector-search
    restart: unless-stopped
    networks:
      - dapp_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      ollama:
        condition: service_healthy
    volumes:
      - vector_search_data:/app/data
    environment:
      # üÜï –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π URL –¥–ª—è Ollama
      - OLLAMA_BASE_URL=http://dapp-ollama:11434
      - OLLAMA_EMBED_MODEL=${OLLAMA_EMBEDDINGS_MODEL:-mxbai-embed-large:latest}
      - VECTOR_SEARCH_PORT=8001
      - LOG_LEVEL=INFO
    # üÜï –£–ª—É—á—à–µ–Ω–Ω—ã–π health check —Å fallback
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8001/health || curl -f http://localhost:8001/ || wget -q --spider http://localhost:8001/health || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 15
      start_period: 180s

  backend:
    image: digital_legal_entitydle-backend:latest
    container_name: dapp-backend
    restart: unless-stopped
    networks:
      - dapp_network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    # üÜï –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ - backend –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ postgres –∏ ollama, –Ω–æ –Ω–µ –∂–¥–µ—Ç vector-search
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
      vector-search:
        condition: service_started
    volumes:
      - backend_node_modules:/app/node_modules
      - ./ssl:/app/ssl:ro
    environment:
      - NODE_ENV=production
      - PORT=8000
      - FRONTEND_URL=https://${DOMAIN}
      # üÜï –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ë–î —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ —Ö–æ—Å—Ç–æ–≤
      - DB_HOST=dapp-postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-dapp_db}
      - DB_USER=${DB_USER:-dapp_user}
      - DB_PASSWORD=${DB_PASSWORD:-dapp_password}
      # üÜï DATABASE_URL —Å SCRAM-SHA-256 –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
      - DATABASE_URL=postgresql://${DB_USER:-dapp_user}:${DB_PASSWORD:-dapp_password}@dapp-postgres:5432/${DB_NAME:-dapp_db}?sslmode=prefer
      # üÜï –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π URL –¥–ª—è Ollama
      - OLLAMA_BASE_URL=http://dapp-ollama:11434
      - OLLAMA_MODEL=${OLLAMA_MODEL:-qwen2.5:7b}
      - OLLAMA_EMBEDDINGS_MODEL=${OLLAMA_EMBEDDINGS_MODEL:-mxbai-embed-large:latest}
      # üÜï –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π URL –¥–ª—è Vector Search
      - VECTOR_SEARCH_URL=http://dapp-vector-search:8001
    # –ù–ï –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç 8000 –Ω–∞—Ä—É–∂—É - —Ç–æ–ª—å–∫–æ nginx –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  frontend:
    image: digital_legal_entitydle-frontend:latest
    container_name: dapp-frontend
    restart: unless-stopped
    networks:
      - dapp_network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./ssl:/app/ssl:ro
    environment:
      - NODE_ENV=production
      - PORT=5173
      # üÜï –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π URL –¥–ª—è backend
      - VITE_BACKEND_URL=https://${DOMAIN}/api
      - VITE_WS_URL=wss://${DOMAIN}/ws
    # –ù–ï –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç 5173 –Ω–∞—Ä—É–∂—É - —Ç–æ–ª—å–∫–æ nginx –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5173', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Certbot –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
  certbot:
    image: certbot/certbot
    container_name: dapp-certbot
    restart: "no"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${EMAIL} --agree-tos --no-eff-email -d ${DOMAIN}
    depends_on:
      - frontend-nginx

  # Nginx —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º SSL –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π WebSocket
  frontend-nginx:
    image: digital_legal_entitydle-frontend-nginx:latest
    container_name: dapp-frontend-nginx
    restart: unless-stopped
    networks:
      - dapp_network
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN=${DOMAIN:-localhost}
      - BACKEND_CONTAINER=dapp-backend
      - EMAIL=${EMAIL}
      # üÜï –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è WebSocket –ø–æ–¥–¥–µ—Ä–∂–∫–∏
      - WS_BACKEND_CONTAINER=dapp-backend
    volumes:
      # SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã Let's Encrypt (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è)
      - /etc/letsencrypt:/etc/ssl/certs:ro
      # Webroot –¥–ª—è certbot
      - /var/www/certbot:/var/www/certbot
    depends_on:
      - backend
      - frontend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health", "||", "curl", "-f", "https://localhost:443/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  webssh-agent:
    image: digital_legal_entitydle-webssh-agent:latest
    container_name: dapp-webssh-agent
    restart: unless-stopped
    volumes:
      - ~/.ssh:/root/.ssh:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
    # üÜï –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–æ–≤ - —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend


# üÜï –Ø–≤–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ Docker —Å–µ—Ç–∏ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Å–≤—è–∑–∏ –º–µ–∂–¥—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏
networks:
  dapp_network:
    driver: bridge
    name: dapp_network

volumes:
  postgres_data:
  ollama_data:
  vector_search_data:
  backend_node_modules:
